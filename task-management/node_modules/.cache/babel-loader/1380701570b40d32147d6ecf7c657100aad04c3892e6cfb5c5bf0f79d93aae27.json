{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Rajeswari\\\\zidioproject\\\\task-management\\\\src\\\\components\\\\dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport \"./dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [columns, setColumns] = useState({\n    new: {\n      name: \"New\",\n      tasks: [{\n        id: \"task-1\",\n        content: \"Task 1\"\n      }, {\n        id: \"task-2\",\n        content: \"Task 2\"\n      }]\n    },\n    inProgress: {\n      name: \"In Progress\",\n      tasks: [{\n        id: \"task-3\",\n        content: \"Task 3\"\n      }, {\n        id: \"task-4\",\n        content: \"Task 4\"\n      }]\n    },\n    event: {\n      name: \"Event\",\n      tasks: [{\n        id: \"task-5\",\n        content: \"Task 5\"\n      }]\n    }\n  });\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n    const sourceColumn = columns[source.droppableId];\n    const destinationColumn = columns[destination.droppableId];\n    if (source.droppableId === destination.droppableId) {\n      // Moving within the same column\n      const reorderedTasks = [...sourceColumn.tasks];\n      const [movedTask] = reorderedTasks.splice(source.index, 1);\n      reorderedTasks.splice(destination.index, 0, movedTask);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          tasks: reorderedTasks\n        }\n      });\n    } else {\n      // Moving to a different column\n      const sourceTasks = [...sourceColumn.tasks];\n      const destTasks = [...destinationColumn.tasks];\n      const [movedTask] = sourceTasks.splice(source.index, 1);\n      destTasks.splice(destination.index, 0, movedTask);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          tasks: sourceTasks\n        },\n        [destination.droppableId]: {\n          ...destinationColumn,\n          tasks: destTasks\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: Object.entries(columns).map(([columnId, column]) => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: columnId,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: column.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), column.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: task.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-item\",\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: task.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 25\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, columnId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"c13QJbdHQ5JwelPj+rqgAQEg6uw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Dashboard","_s","columns","setColumns","new","name","tasks","id","content","inProgress","event","onDragEnd","result","destination","source","sourceColumn","droppableId","destinationColumn","reorderedTasks","movedTask","splice","index","sourceTasks","destTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","columnId","column","provided","ref","innerRef","droppableProps","task","draggableId","draggableProps","dragHandleProps","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/hp/Rajeswari/zidioproject/task-management/src/components/dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport \"./dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  const [columns, setColumns] = useState({\r\n    new: {\r\n      name: \"New\",\r\n      tasks: [\r\n        { id: \"task-1\", content: \"Task 1\" },\r\n        { id: \"task-2\", content: \"Task 2\" },\r\n      ],\r\n    },\r\n    inProgress: {\r\n      name: \"In Progress\",\r\n      tasks: [\r\n        { id: \"task-3\", content: \"Task 3\" },\r\n        { id: \"task-4\", content: \"Task 4\" },\r\n      ],\r\n    },\r\n    event: {\r\n      name: \"Event\",\r\n      tasks: [\r\n        { id: \"task-5\", content: \"Task 5\" },\r\n      ],\r\n    },\r\n  });\r\n\r\n  const onDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n\r\n    const { source, destination } = result;\r\n    const sourceColumn = columns[source.droppableId];\r\n    const destinationColumn = columns[destination.droppableId];\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      // Moving within the same column\r\n      const reorderedTasks = [...sourceColumn.tasks];\r\n      const [movedTask] = reorderedTasks.splice(source.index, 1);\r\n      reorderedTasks.splice(destination.index, 0, movedTask);\r\n\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: { ...sourceColumn, tasks: reorderedTasks },\r\n      });\r\n    } else {\r\n      // Moving to a different column\r\n      const sourceTasks = [...sourceColumn.tasks];\r\n      const destTasks = [...destinationColumn.tasks];\r\n      const [movedTask] = sourceTasks.splice(source.index, 1);\r\n      destTasks.splice(destination.index, 0, movedTask);\r\n\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: { ...sourceColumn, tasks: sourceTasks },\r\n        [destination.droppableId]: { ...destinationColumn, tasks: destTasks },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2>Task Management</h2>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"columns\">\r\n          {Object.entries(columns).map(([columnId, column]) => (\r\n            <Droppable key={columnId} droppableId={columnId}>\r\n              {(provided) => (\r\n                <div className=\"column\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                  <h3>{column.name}</h3>\r\n                  {column.tasks.map((task, index) => (\r\n                    <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                      {(provided) => (\r\n                        <div\r\n                          className=\"task-item\"\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                        >\r\n                          {task.content}\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          ))}\r\n        </div>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}