{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Rajeswari\\\\zidioproject\\\\task-management\\\\src\\\\components\\\\otpverification\\\\OTPVerification.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPVerification = ({\n  setIsVerified\n}) => {\n  _s();\n  const [otp, setOtp] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleOTPSubmit = () => {\n    // Simulating OTP validation - Replace with actual API call\n    if (otp === \"123456\") {\n      // Replace this with your actual OTP validation logic\n      localStorage.setItem(\"isVerified\", \"true\"); // Store verification in localStorage\n      setIsVerified(true); // Update state in App.js\n      navigate(\"/dashboard\"); // Redirect to dashboard\n    } else {\n      setError(\"Invalid OTP. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: otp,\n      onChange: e => setOtp(e.target.value),\n      placeholder: \"Enter OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOTPSubmit,\n      children: \"OK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPVerification, \"LLnyzpA1Veo47XyIEyNaRvw0eo0=\", false, function () {\n  return [useNavigate];\n});\n_c = OTPVerification;\nexport default OTPVerification;\nvar _c;\n$RefreshReg$(_c, \"OTPVerification\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","OTPVerification","setIsVerified","_s","otp","setOtp","error","setError","navigate","handleOTPSubmit","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Rajeswari/zidioproject/task-management/src/components/otpverification/OTPVerification.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst OTPVerification = ({ setIsVerified }) => {\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleOTPSubmit = () => {\r\n    // Simulating OTP validation - Replace with actual API call\r\n    if (otp === \"123456\") {  // Replace this with your actual OTP validation logic\r\n      localStorage.setItem(\"isVerified\", \"true\");  // Store verification in localStorage\r\n      setIsVerified(true);  // Update state in App.js\r\n      navigate(\"/dashboard\");  // Redirect to dashboard\r\n    } else {\r\n      setError(\"Invalid OTP. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"otp-container\">\r\n      <h2>Enter OTP</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={otp}\r\n        onChange={(e) => setOtp(e.target.value)}\r\n        placeholder=\"Enter OTP\"\r\n      />\r\n      <button onClick={handleOTPSubmit}>OK</button>\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPVerification;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACA,IAAIL,GAAG,KAAK,QAAQ,EAAE;MAAG;MACvBM,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,CAAE;MAC7CT,aAAa,CAAC,IAAI,CAAC,CAAC,CAAE;MACtBM,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAE;IAC3B,CAAC,MAAM;MACLD,QAAQ,CAAC,gCAAgC,CAAC;IAC5C;EACF,CAAC;EAED,oBACEP,OAAA;IAAKY,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bb,OAAA;MAAAa,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,GAAI;MACXgB,QAAQ,EAAGC,CAAC,IAAKhB,MAAM,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACxCI,WAAW,EAAC;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFjB,OAAA;MAAQwB,OAAO,EAAEf,eAAgB;MAAAI,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC5CX,KAAK,iBAAIN,OAAA;MAAGY,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACd,EAAA,CA7BIF,eAAe;EAAA,QAGFH,WAAW;AAAA;AAAA2B,EAAA,GAHxBxB,eAAe;AA+BrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}