{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Rajeswari\\\\zidioproject\\\\task-management\\\\src\\\\components\\\\otpverification\\\\OTPVerification.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Otpverification.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OTPVerification({\n  setIsAuthenticated\n}) {\n  _s();\n  const [otp, setOtp] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleChange = (e, index) => {\n    let value = e.target.value;\n    if (!/^\\d*$/.test(value)) return;\n    let newOtp = [...otp];\n    newOtp[index] = value;\n    setOtp(newOtp);\n    if (value && index < otp.length - 1) {\n      document.getElementById(`otp-${index + 1}`).focus();\n    }\n  };\n  const handleVerify = () => {\n    const enteredOtp = otp.join(\"\");\n    if (enteredOtp.length === 6) {\n      setMessage(\"✅ OTP Verified Successfully!\");\n      setIsAuthenticated(true);\n      navigate(\"/dashboard\"); // Redirect after OTP verification (You can replace \"/dashboard\" with another route)\n    } else {\n      setMessage(\"❌ Invalid OTP. Please enter all 6 digits.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"OTP Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter the 6-digit code sent to your email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-inputs\",\n      children: otp.map((digit, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        id: `otp-${index}`,\n        type: \"text\",\n        maxLength: \"1\",\n        value: digit,\n        onChange: e => handleChange(e, index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"verify-btn\",\n      onClick: handleVerify,\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"otp-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(OTPVerification, \"GLIphU3Tv8jbd3PE9CyvIWiAtSE=\", false, function () {\n  return [useNavigate];\n});\n_c = OTPVerification;\nvar _c;\n$RefreshReg$(_c, \"OTPVerification\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","OTPVerification","setIsAuthenticated","_s","otp","setOtp","message","setMessage","navigate","handleChange","e","index","value","target","test","newOtp","length","document","getElementById","focus","handleVerify","enteredOtp","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","digit","id","type","maxLength","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Rajeswari/zidioproject/task-management/src/components/otpverification/OTPVerification.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Otpverification.css\";\r\n\r\nexport default function OTPVerification({ setIsAuthenticated }) {\r\n  const [otp, setOtp] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e, index) => {\r\n    let value = e.target.value;\r\n    if (!/^\\d*$/.test(value)) return;\r\n\r\n    let newOtp = [...otp];\r\n    newOtp[index] = value;\r\n    setOtp(newOtp);\r\n\r\n    if (value && index < otp.length - 1) {\r\n      document.getElementById(`otp-${index + 1}`).focus();\r\n    }\r\n  };\r\n\r\n  const handleVerify = () => {\r\n    const enteredOtp = otp.join(\"\");\r\n    if (enteredOtp.length === 6) {\r\n      setMessage(\"✅ OTP Verified Successfully!\");\r\n      setIsAuthenticated(true);\r\n      navigate(\"/dashboard\");  // Redirect after OTP verification (You can replace \"/dashboard\" with another route)\r\n    } else {\r\n      setMessage(\"❌ Invalid OTP. Please enter all 6 digits.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"otp-container\">\r\n      <h2>OTP Verification</h2>\r\n      <p>Enter the 6-digit code sent to your email</p>\r\n      <div className=\"otp-inputs\">\r\n        {otp.map((digit, index) => (\r\n          <input\r\n            key={index}\r\n            id={`otp-${index}`}\r\n            type=\"text\"\r\n            maxLength=\"1\"\r\n            value={digit}\r\n            onChange={(e) => handleChange(e, index)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button className=\"verify-btn\" onClick={handleVerify}>\r\n        Verify OTP\r\n      </button>\r\n      {message && <p className=\"otp-message\">{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}