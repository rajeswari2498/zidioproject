{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Rajeswari\\\\zidioproject\\\\task-management\\\\src\\\\components\\\\message\\\\Message.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ChatApp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [groups, setGroups] = useState([{\n    id: 1,\n    name: \"General Chat\",\n    messages: [{\n      sender: \"AK\",\n      text: \"hi\"\n    }]\n  }, {\n    id: 2,\n    name: \"Group Chat #1\",\n    messages: []\n  }]);\n  const [selectedGroup, setSelectedGroup] = useState(groups[0]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [newGroup, setNewGroup] = useState({\n    name: \"\",\n    members: \"\",\n    type: \"Public\",\n    description: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const handleGroupClick = group => {\n    setSelectedGroup(group);\n  };\n  const handleCreateGroup = () => {\n    if (newGroup.name.trim() === \"\") return;\n    const newGroupData = {\n      id: groups.length + 1,\n      name: newGroup.name,\n      messages: []\n    };\n    setGroups([...groups, newGroupData]);\n    setShowPopup(false);\n    setNewGroup({\n      name: \"\",\n      members: \"\",\n      type: \"Public\",\n      description: \"\"\n    });\n  };\n  const handleSendMessage = () => {\n    if (message.trim() === \"\") return;\n    const updatedGroups = groups.map(group => group.id === selectedGroup.id ? {\n      ...group,\n      messages: [...group.messages, {\n        sender: \"MN\",\n        text: message\n      }]\n    } : group);\n    setGroups(updatedGroups);\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowPopup(true),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-item ${selectedGroup.id === group.id ? \"active\" : \"\"}`,\n          onClick: () => handleGroupClick(group),\n          children: group.name\n        }, group.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedGroup.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: selectedGroup.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"avatar\",\n            children: msg.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Group Name\",\n          value: newGroup.name,\n          onChange: e => setNewGroup({\n            ...newGroup,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Members (comma separated)\",\n          value: newGroup.members,\n          onChange: e => setNewGroup({\n            ...newGroup,\n            members: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newGroup.type,\n          onChange: e => setNewGroup({\n            ...newGroup,\n            type: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Public\",\n            children: \"Public\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Private\",\n            children: \"Private\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Description\",\n          value: newGroup.description,\n          onChange: e => setNewGroup({\n            ...newGroup,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateGroup,\n          children: \"Create Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowPopup(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"NRaUEY5CZxeucuOQLKfVrGuQk7w=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatApp","_s","groups","setGroups","id","name","messages","sender","text","selectedGroup","setSelectedGroup","showPopup","setShowPopup","newGroup","setNewGroup","members","type","description","message","setMessage","handleGroupClick","group","handleCreateGroup","trim","newGroupData","length","handleSendMessage","updatedGroups","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","msg","index","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/hp/Rajeswari/zidioproject/task-management/src/components/message/Message.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ChatApp.css\";\r\n\r\nconst ChatApp = () => {\r\n  const [groups, setGroups] = useState([\r\n    { id: 1, name: \"General Chat\", messages: [{ sender: \"AK\", text: \"hi\" }] },\r\n    { id: 2, name: \"Group Chat #1\", messages: [] },\r\n  ]);\r\n  const [selectedGroup, setSelectedGroup] = useState(groups[0]);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [newGroup, setNewGroup] = useState({\r\n    name: \"\",\r\n    members: \"\",\r\n    type: \"Public\",\r\n    description: \"\",\r\n  });\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleGroupClick = (group) => {\r\n    setSelectedGroup(group);\r\n  };\r\n\r\n  const handleCreateGroup = () => {\r\n    if (newGroup.name.trim() === \"\") return;\r\n    const newGroupData = {\r\n      id: groups.length + 1,\r\n      name: newGroup.name,\r\n      messages: [],\r\n    };\r\n    setGroups([...groups, newGroupData]);\r\n    setShowPopup(false);\r\n    setNewGroup({ name: \"\", members: \"\", type: \"Public\", description: \"\" });\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (message.trim() === \"\") return;\r\n    const updatedGroups = groups.map((group) =>\r\n      group.id === selectedGroup.id\r\n        ? {\r\n            ...group,\r\n            messages: [...group.messages, { sender: \"MN\", text: message }],\r\n          }\r\n        : group\r\n    );\r\n    setGroups(updatedGroups);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Sidebar */}\r\n      <div className=\"sidebar\">\r\n        <div className=\"header\">\r\n          <h2>Chat</h2>\r\n          <button onClick={() => setShowPopup(true)}>+</button>\r\n        </div>\r\n        <div className=\"chat-list\">\r\n          {groups.map((group) => (\r\n            <div\r\n              key={group.id}\r\n              className={`chat-item ${\r\n                selectedGroup.id === group.id ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => handleGroupClick(group)}\r\n            >\r\n              {group.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chat Window */}\r\n      <div className=\"chat-window\">\r\n        <h2>{selectedGroup.name}</h2>\r\n        <div className=\"messages\">\r\n          {selectedGroup.messages.map((msg, index) => (\r\n            <div key={index} className=\"message\">\r\n              <span className=\"avatar\">{msg.sender}</span>\r\n              <span className=\"text\">{msg.text}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"message-input\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type a message\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n          />\r\n          <button onClick={handleSendMessage}>Send</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Create Group Popup */}\r\n      {showPopup && (\r\n        <div className=\"popup\">\r\n          <div className=\"popup-content\">\r\n            <h3>Create Group</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Group Name\"\r\n              value={newGroup.name}\r\n              onChange={(e) =>\r\n                setNewGroup({ ...newGroup, name: e.target.value })\r\n              }\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Members (comma separated)\"\r\n              value={newGroup.members}\r\n              onChange={(e) =>\r\n                setNewGroup({ ...newGroup, members: e.target.value })\r\n              }\r\n            />\r\n            <select\r\n              value={newGroup.type}\r\n              onChange={(e) =>\r\n                setNewGroup({ ...newGroup, type: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"Public\">Public</option>\r\n              <option value=\"Private\">Private</option>\r\n            </select>\r\n            <textarea\r\n              placeholder=\"Description\"\r\n              value={newGroup.description}\r\n              onChange={(e) =>\r\n                setNewGroup({ ...newGroup, description: e.target.value })\r\n              }\r\n            />\r\n            <button onClick={handleCreateGroup}>Create Group</button>\r\n            <button onClick={() => setShowPopup(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatApp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CACnC;IAAEO,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,cAAc;IAAEC,QAAQ,EAAE,CAAC;MAAEC,MAAM,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAK,CAAC;EAAE,CAAC,EACzE;IAAEJ,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,eAAe;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAC/C,CAAC;EACF,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC;IACvCQ,IAAI,EAAE,EAAE;IACRU,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMuB,gBAAgB,GAAIC,KAAK,IAAK;IAClCX,gBAAgB,CAACW,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIT,QAAQ,CAACR,IAAI,CAACkB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACjC,MAAMC,YAAY,GAAG;MACnBpB,EAAE,EAAEF,MAAM,CAACuB,MAAM,GAAG,CAAC;MACrBpB,IAAI,EAAEQ,QAAQ,CAACR,IAAI;MACnBC,QAAQ,EAAE;IACZ,CAAC;IACDH,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEsB,YAAY,CAAC,CAAC;IACpCZ,YAAY,CAAC,KAAK,CAAC;IACnBE,WAAW,CAAC;MAAET,IAAI,EAAE,EAAE;MAAEU,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE,QAAQ;MAAEC,WAAW,EAAE;IAAG,CAAC,CAAC;EACzE,CAAC;EAED,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIR,OAAO,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC3B,MAAMI,aAAa,GAAGzB,MAAM,CAAC0B,GAAG,CAAEP,KAAK,IACrCA,KAAK,CAACjB,EAAE,KAAKK,aAAa,CAACL,EAAE,GACzB;MACE,GAAGiB,KAAK;MACRf,QAAQ,EAAE,CAAC,GAAGe,KAAK,CAACf,QAAQ,EAAE;QAAEC,MAAM,EAAE,IAAI;QAAEC,IAAI,EAAEU;MAAQ,CAAC;IAC/D,CAAC,GACDG,KACN,CAAC;IACDlB,SAAS,CAACwB,aAAa,CAAC;IACxBR,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEpB,OAAA;IAAK8B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAE7B/B,OAAA;MAAK8B,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtB/B,OAAA;QAAK8B,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrB/B,OAAA;UAAA+B,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbnC,OAAA;UAAQoC,OAAO,EAAEA,CAAA,KAAMvB,YAAY,CAAC,IAAI,CAAE;UAAAkB,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACNnC,OAAA;QAAK8B,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvB5B,MAAM,CAAC0B,GAAG,CAAEP,KAAK,iBAChBtB,OAAA;UAEE8B,SAAS,EAAE,aACTpB,aAAa,CAACL,EAAE,KAAKiB,KAAK,CAACjB,EAAE,GAAG,QAAQ,GAAG,EAAE,EAC5C;UACH+B,OAAO,EAAEA,CAAA,KAAMf,gBAAgB,CAACC,KAAK,CAAE;UAAAS,QAAA,EAEtCT,KAAK,CAAChB;QAAI,GANNgB,KAAK,CAACjB,EAAE;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNnC,OAAA;MAAK8B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B/B,OAAA;QAAA+B,QAAA,EAAKrB,aAAa,CAACJ;MAAI;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7BnC,OAAA;QAAK8B,SAAS,EAAC,UAAU;QAAAC,QAAA,EACtBrB,aAAa,CAACH,QAAQ,CAACsB,GAAG,CAAC,CAACQ,GAAG,EAAEC,KAAK,kBACrCtC,OAAA;UAAiB8B,SAAS,EAAC,SAAS;UAAAC,QAAA,gBAClC/B,OAAA;YAAM8B,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAAEM,GAAG,CAAC7B;UAAM;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5CnC,OAAA;YAAM8B,SAAS,EAAC,MAAM;YAAAC,QAAA,EAAEM,GAAG,CAAC5B;UAAI;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAFhCG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNnC,OAAA;QAAK8B,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B/B,OAAA;UACEiB,IAAI,EAAC,MAAM;UACXsB,WAAW,EAAC,gBAAgB;UAC5BC,KAAK,EAAErB,OAAQ;UACfsB,QAAQ,EAAGC,CAAC,IAAKtB,UAAU,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACFnC,OAAA;UAAQoC,OAAO,EAAET,iBAAkB;UAAAI,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLvB,SAAS,iBACRZ,OAAA;MAAK8B,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpB/B,OAAA;QAAK8B,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B/B,OAAA;UAAA+B,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBnC,OAAA;UACEiB,IAAI,EAAC,MAAM;UACXsB,WAAW,EAAC,YAAY;UACxBC,KAAK,EAAE1B,QAAQ,CAACR,IAAK;UACrBmC,QAAQ,EAAGC,CAAC,IACV3B,WAAW,CAAC;YAAE,GAAGD,QAAQ;YAAER,IAAI,EAAEoC,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC;QAClD;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFnC,OAAA;UACEiB,IAAI,EAAC,MAAM;UACXsB,WAAW,EAAC,2BAA2B;UACvCC,KAAK,EAAE1B,QAAQ,CAACE,OAAQ;UACxByB,QAAQ,EAAGC,CAAC,IACV3B,WAAW,CAAC;YAAE,GAAGD,QAAQ;YAAEE,OAAO,EAAE0B,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC;QACrD;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFnC,OAAA;UACEwC,KAAK,EAAE1B,QAAQ,CAACG,IAAK;UACrBwB,QAAQ,EAAGC,CAAC,IACV3B,WAAW,CAAC;YAAE,GAAGD,QAAQ;YAAEG,IAAI,EAAEyB,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAClD;UAAAT,QAAA,gBAED/B,OAAA;YAAQwC,KAAK,EAAC,QAAQ;YAAAT,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCnC,OAAA;YAAQwC,KAAK,EAAC,SAAS;YAAAT,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACTnC,OAAA;UACEuC,WAAW,EAAC,aAAa;UACzBC,KAAK,EAAE1B,QAAQ,CAACI,WAAY;UAC5BuB,QAAQ,EAAGC,CAAC,IACV3B,WAAW,CAAC;YAAE,GAAGD,QAAQ;YAAEI,WAAW,EAAEwB,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC;QACzD;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFnC,OAAA;UAAQoC,OAAO,EAAEb,iBAAkB;UAAAQ,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzDnC,OAAA;UAAQoC,OAAO,EAAEA,CAAA,KAAMvB,YAAY,CAAC,KAAK,CAAE;UAAAkB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CAtIID,OAAO;AAAA2C,EAAA,GAAP3C,OAAO;AAwIb,eAAeA,OAAO;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}