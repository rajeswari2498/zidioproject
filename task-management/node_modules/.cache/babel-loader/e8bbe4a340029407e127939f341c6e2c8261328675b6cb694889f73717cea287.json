{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Rajeswari\\\\zidioproject\\\\task-management\\\\src\\\\components\\\\otpverification\\\\OTPVerification.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaCopy } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPVerification = ({\n  setIsVerified\n}) => {\n  _s();\n  const [otp, setOtp] = useState(\"\");\n  const [generatedOtp, setGeneratedOtp] = useState(null);\n  const [copied, setCopied] = useState(false);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Generate OTP when component mounts\n  useEffect(() => {\n    const otpCode = Math.floor(100000 + Math.random() * 900000); // 6-digit OTP\n    setGeneratedOtp(otpCode);\n  }, []);\n  const copyOtp = () => {\n    if (generatedOtp) {\n      navigator.clipboard.writeText(generatedOtp.toString());\n      setCopied(true);\n      setTimeout(() => setCopied(false), 1500);\n    }\n  };\n  const handleOTPSubmit = () => {\n    if (otp.trim() === (generatedOtp === null || generatedOtp === void 0 ? void 0 : generatedOtp.toString())) {\n      // Validate OTP\n      localStorage.setItem(\"isVerified\", \"true\");\n      setIsVerified(true);\n      navigate(\"/dashboard\");\n    } else {\n      setError(\"Invalid OTP. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"OTP Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter the OTP sent to your registered mobile/email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"OTP: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: generatedOtp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaCopy, {\n        className: \"copy-icon\",\n        onClick: copyOtp,\n        title: \"Copy OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), copied && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"copied-message\",\n        children: \"Copied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: otp,\n      onChange: e => setOtp(e.target.value),\n      placeholder: \"Enter OTP\",\n      className: \"otp-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOTPSubmit,\n      className: \"otp-button\",\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPVerification, \"ivPxD76m9Zz96VnjC8hZPqB1wG8=\", false, function () {\n  return [useNavigate];\n});\n_c = OTPVerification;\nexport default OTPVerification;\nvar _c;\n$RefreshReg$(_c, \"OTPVerification\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","FaCopy","jsxDEV","_jsxDEV","OTPVerification","setIsVerified","_s","otp","setOtp","generatedOtp","setGeneratedOtp","copied","setCopied","error","setError","navigate","otpCode","Math","floor","random","copyOtp","navigator","clipboard","writeText","toString","setTimeout","handleOTPSubmit","trim","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/hp/Rajeswari/zidioproject/task-management/src/components/otpverification/OTPVerification.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaCopy } from \"react-icons/fa\";\r\n\r\nconst OTPVerification = ({ setIsVerified }) => {\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [generatedOtp, setGeneratedOtp] = useState(null);\r\n  const [copied, setCopied] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  // Generate OTP when component mounts\r\n  useEffect(() => {\r\n    const otpCode = Math.floor(100000 + Math.random() * 900000); // 6-digit OTP\r\n    setGeneratedOtp(otpCode);\r\n  }, []);\r\n\r\n  const copyOtp = () => {\r\n    if (generatedOtp) {\r\n      navigator.clipboard.writeText(generatedOtp.toString());\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), 1500);\r\n    }\r\n  };\r\n\r\n  const handleOTPSubmit = () => {\r\n    if (otp.trim() === generatedOtp?.toString()) { // Validate OTP\r\n      localStorage.setItem(\"isVerified\", \"true\");\r\n      setIsVerified(true);\r\n      navigate(\"/dashboard\");\r\n    } else {\r\n      setError(\"Invalid OTP. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"otp-container\">\r\n      <h2>OTP Verification</h2>\r\n      <p>Enter the OTP sent to your registered mobile/email.</p>\r\n\r\n      {/* Display generated OTP with copy button */}\r\n      <div className=\"otp-message\">\r\n        <p>OTP: <strong>{generatedOtp}</strong></p>\r\n        <FaCopy className=\"copy-icon\" onClick={copyOtp} title=\"Copy OTP\" />\r\n        {copied && <span className=\"copied-message\">Copied!</span>}\r\n      </div>\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={otp}\r\n        onChange={(e) => setOtp(e.target.value)}\r\n        placeholder=\"Enter OTP\"\r\n        className=\"otp-input\"\r\n      />\r\n\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      <button onClick={handleOTPSubmit} className=\"otp-button\">\r\n        Verify OTP\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPVerification;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}