{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Rajeswari\\\\zidioproject\\\\task-management\\\\src\\\\components\\\\otpverification\\\\OTPVerification.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Otpverification.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OTPVerification = ({\n  setIsVerified\n}) => {\n  _s();\n  // Accept setIsVerified as a prop\n  const [phone, setPhone] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [generatedOtp, setGeneratedOtp] = useState(null);\n  const [otpSent, setOtpSent] = useState(false);\n  const navigate = useNavigate();\n  const sendOtp = () => {\n    if (phone.length !== 10) {\n      alert(\"Enter a valid 10-digit phone number!\");\n      return;\n    }\n    const otp = Math.floor(100000 + Math.random() * 900000);\n    setGeneratedOtp(otp);\n    setOtpSent(true);\n    alert(`OTP Sent: ${otp} (Simulated) üöÄ`);\n  };\n  const verifyOtp = () => {\n    if (otp === (generatedOtp === null || generatedOtp === void 0 ? void 0 : generatedOtp.toString())) {\n      alert(\"üéâ OTP Verified Successfully!\");\n      setIsVerified(true); // Update verification state\n      navigate(\"/dashboard\"); // Redirect to the dashboard\n    } else {\n      alert(\"‚ùå Invalid OTP! Try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phone Number Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), !otpSent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        placeholder: \"Enter phone number (10 digits)\",\n        value: phone,\n        onChange: e => setPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-btn\",\n        onClick: sendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: \"6\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"verify-btn\",\n        onClick: verifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPVerification, \"znpqnXYbg73cZ0JeP3ObLNJUrQM=\", false, function () {\n  return [useNavigate];\n});\n_c = OTPVerification;\nexport default OTPVerification;\nvar _c;\n$RefreshReg$(_c, \"OTPVerification\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","OTPVerification","setIsVerified","_s","phone","setPhone","otp","setOtp","generatedOtp","setGeneratedOtp","otpSent","setOtpSent","navigate","sendOtp","length","alert","Math","floor","random","verifyOtp","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","maxLength","_c","$RefreshReg$"],"sources":["C:/Users/hp/Rajeswari/zidioproject/task-management/src/components/otpverification/OTPVerification.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Otpverification.css\";\r\n\r\nconst OTPVerification = ({ setIsVerified }) => {  // Accept setIsVerified as a prop\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [generatedOtp, setGeneratedOtp] = useState(null);\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const sendOtp = () => {\r\n    if (phone.length !== 10) {\r\n      alert(\"Enter a valid 10-digit phone number!\");\r\n      return;\r\n    }\r\n\r\n    const otp = Math.floor(100000 + Math.random() * 900000);\r\n    setGeneratedOtp(otp);\r\n    setOtpSent(true);\r\n\r\n    alert(`OTP Sent: ${otp} (Simulated) üöÄ`);\r\n  };\r\n\r\n  const verifyOtp = () => {\r\n    if (otp === generatedOtp?.toString()) {\r\n      alert(\"üéâ OTP Verified Successfully!\");\r\n      setIsVerified(true); // Update verification state\r\n      navigate(\"/dashboard\"); // Redirect to the dashboard\r\n    } else {\r\n      alert(\"‚ùå Invalid OTP! Try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"otp-container\">\r\n      <h2>Phone Number Verification</h2>\r\n\r\n      {!otpSent ? (\r\n        <>\r\n          <input\r\n            type=\"tel\"\r\n            placeholder=\"Enter phone number (10 digits)\"\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n          />\r\n          <button className=\"send-btn\" onClick={sendOtp}>Send OTP</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            maxLength=\"6\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button className=\"verify-btn\" onClick={verifyOtp}>Verify OTP</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPVerification;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}